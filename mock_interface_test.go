// Code generated by MockGen. DO NOT EDIT.
// Source: interface_test.go

// Package gobat_test is a generated GoMock package.
package gobat_test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJobHandlerInterface is a mock of JobHandlerInterface interface.
type MockJobHandlerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockJobHandlerInterfaceMockRecorder
}

// MockJobHandlerInterfaceMockRecorder is the mock recorder for MockJobHandlerInterface.
type MockJobHandlerInterfaceMockRecorder struct {
	mock *MockJobHandlerInterface
}

// NewMockJobHandlerInterface creates a new mock instance.
func NewMockJobHandlerInterface(ctrl *gomock.Controller) *MockJobHandlerInterface {
	mock := &MockJobHandlerInterface{ctrl: ctrl}
	mock.recorder = &MockJobHandlerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJobHandlerInterface) EXPECT() *MockJobHandlerInterfaceMockRecorder {
	return m.recorder
}

// Handler mocks base method.
func (m *MockJobHandlerInterface) Handler(arg0 context.Context, arg1 int, arg2 error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handler", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Handler indicates an expected call of Handler.
func (mr *MockJobHandlerInterfaceMockRecorder) Handler(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handler", reflect.TypeOf((*MockJobHandlerInterface)(nil).Handler), arg0, arg1, arg2)
}
